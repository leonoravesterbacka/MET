from ROOT import TGraphErrors
import sys


class collection:
    def __init__(self, bins, vname):
        self.bins  = bins
        self.vname = vname
        self.cen_mc, self.cen_mc_gr = 0, 0
        self.fwd_mc, self.fwd_mc_gr = 0, 0
        self.cen_da, self.cen_da_gr = 0, 0
        self.fwd_da, self.fwd_da_gr = 0, 0

    def getHisto(self, dataMC, eta):
        if   (dataMC, eta) == ('MC'  , 'central'): 
            return self.cen_mc
        elif (dataMC, eta) == ('MC'  , 'forward'): 
            return self.fwd_mc
        elif (dataMC, eta) == ('DATA', 'central'): 
            return self.cen_da
        elif (dataMC, eta) == ('DATA', 'forward'): 
            return self.fwd_da

    def getGraph(self, dataMC, eta):
        if   (dataMC, eta) == ('MC'  , 'central'): 
            return self.cen_mc_gr
        elif (dataMC, eta) == ('MC'  , 'forward'): 
            return self.fwd_mc_gr
        elif (dataMC, eta) == ('DATA', 'central'): 
            return self.cen_da_gr
        elif (dataMC, eta) == ('DATA', 'forward'): 
            return self.fwd_da_gr

    def setHisto(self, histo, dataMC, eta):
        if   (dataMC, eta) == ('MC'  , 'central'): 
            self.cen_mc = histo
            self.cen_mc_gr = TGraphErrors(histo)
        elif (dataMC, eta) == ('MC'  , 'forward'): 
            self.fwd_mc = histo
            self.fwd_mc_gr = TGraphErrors(histo)
        elif (dataMC, eta) == ('DATA', 'central'): 
            self.cen_da = histo
            self.cen_da_gr = TGraphErrors(histo)
        elif (dataMC, eta) == ('DATA', 'forward'): 
            self.fwd_da = histo
            self.fwd_da_gr = TGraphErrors(histo)
        else:
            print 'you are not calling setHisto correctly'

    def printValues(self):
        for _histo in [self.cen_mc, self.cen_da, self.fwd_mc, self.fwd_da]:
            if _histo == 0: continue
            if _histo in [self.cen_mc, self.cen_da]:
                eta = 'central'
            else:
                eta = 'forward'
            for _bin in range(1,_histo.GetNbinsX()+1):
                print '%-6s in [%.0f, %.0f] in %s: %.3f +- %.3f' %( self.vname,
                      _histo.GetXaxis().GetBinLowEdge(_bin),
                      _histo.GetXaxis().GetBinUpEdge (_bin),
                      eta,
                      _histo.GetBinContent(_bin),
                      _histo.GetBinError(_bin))

    def saveInFile(self, pattern, systErr, findBin = 0):
        print 'writing calculated values into file...'
        filename = 'ingredients.dat'
        f = open(filename, 'r')
        lines = f.readlines()
        newlines = []
        for line in lines:
            appended = False
            for t in ['MC', 'DATA'] if self.cen_da else ['MC']:
                if all(s in line for s in pattern+[t]):
                    newlines.append('%-6s \t %-15s %-6s \t %.4f \t %.4f \t %-6s \t %.4f \t %.4f \t %-6s\n' %(
                            line.split()[0], line.split()[1], t,
                            self.getHisto(t, 'central').GetBinContent(1 if not findBin else self.getHisto(t, 'central').FindBin(findBin)),
                            self.getHisto(t, 'central').GetBinError  (1 if not findBin else self.getHisto(t, 'central').FindBin(findBin)),
                            str(systErr),
                            self.getHisto(t, 'forward').GetBinContent(1 if not findBin else self.getHisto(t, 'forward').FindBin(findBin)),
                            self.getHisto(t, 'forward').GetBinError  (1 if not findBin else self.getHisto(t, 'forward').FindBin(findBin)),
                            str(systErr) ))
                    appended = True
    
            if not appended:
                newlines.append(line)
        f.close()
        g = open(filename, 'w')
        g.writelines(newlines)

class region():
    def __init__(self, name, cuts, rvars, dependence, varname, bins,  doData):
        self.name      = name
        self.cuts      = cuts
        self.rvars     = rvars
        self.dependence = dependence
        self.varname   = varname
        self.bins      = bins
        self.doData    = doData
        #if len(rvars) is not len(bins):
        #    print 'length of variables and bins has to be equal'
        #    sys.exit('exiting!')
        self.setVariables()

    def setVariables(self):
        for v in self.rvars:

            
            if v == 'metPuppi_pt':
                self.metPuppi_pt   = collection(self.bins[self.rvars.index(v)], v)
                self.metPuppi_pt_dy   = collection(self.bins[self.rvars.index(v)], v)
                self.metPuppi_pt_da = collection(self.bins[self.rvars.index(v)], v)    
                self.metPuppi_pt_tt = collection(self.bins[self.rvars.index(v)], v)    
                self.metPuppi_pt_ewk = collection(self.bins[self.rvars.index(v)], v)    
                self.metPuppi_Up   = collection(self.bins[self.rvars.index(v)], v)
                self.metPuppi_Up_dy   = collection(self.bins[self.rvars.index(v)], v)
                self.metPuppi_Up_da = collection(self.bins[self.rvars.index(v)], v)    
                self.metPuppi_Up_tt = collection(self.bins[self.rvars.index(v)], v)    
                self.metPuppi_Up_ewk = collection(self.bins[self.rvars.index(v)], v)    
                self.metPuppi_Down   = collection(self.bins[self.rvars.index(v)], v)          
                self.metPuppi_Down_dy   = collection(self.bins[self.rvars.index(v)], v)
                self.metPuppi_Down_da = collection(self.bins[self.rvars.index(v)], v)    
                self.metPuppi_Down_tt = collection(self.bins[self.rvars.index(v)], v)    
                self.metPuppi_Down_ewk = collection(self.bins[self.rvars.index(v)], v)    
                self.metPuppi_unclUp   = collection(self.bins[self.rvars.index(v)], v)
                self.metPuppi_unclUp_dy   = collection(self.bins[self.rvars.index(v)], v)
                self.metPuppi_unclUp_da = collection(self.bins[self.rvars.index(v)], v)    
                self.metPuppi_unclUp_tt = collection(self.bins[self.rvars.index(v)], v)    
                self.metPuppi_unclUp_ewk = collection(self.bins[self.rvars.index(v)], v)    
                self.metPuppi_unclDown   = collection(self.bins[self.rvars.index(v)], v)      
                self.metPuppi_unclDown_dy   = collection(self.bins[self.rvars.index(v)], v)
                self.metPuppi_unclDown_da = collection(self.bins[self.rvars.index(v)], v)    
                self.metPuppi_unclDown_tt = collection(self.bins[self.rvars.index(v)], v)    
                self.metPuppi_unclDown_ewk = collection(self.bins[self.rvars.index(v)], v)    
                self.metPuppi_pt_qcd   = collection(self.bins[self.rvars.index(v)], v)
                self.metPuppi_pt_gjets   = collection(self.bins[self.rvars.index(v)], v)
                self.metPuppi_pt_wg = collection(self.bins[self.rvars.index(v)], v)  
                self.metPuppi_pt_wj = collection(self.bins[self.rvars.index(v)], v)  
                self.metPuppi_pt_ttg = collection(self.bins[self.rvars.index(v)], v)  
                self.metPuppi_pt_zg = collection(self.bins[self.rvars.index(v)], v)  
                self.metPuppi_pt_da = collection(self.bins[self.rvars.index(v)], v)         
                self.metPuppi_Up   = collection(self.bins[self.rvars.index(v)], v)
                self.metPuppi_Up_qcd   = collection(self.bins[self.rvars.index(v)], v)
                self.metPuppi_Up_gjets   = collection(self.bins[self.rvars.index(v)], v)
                self.metPuppi_Up_wg = collection(self.bins[self.rvars.index(v)], v)  
                self.metPuppi_Up_wj = collection(self.bins[self.rvars.index(v)], v)  
                self.metPuppi_Up_ttg = collection(self.bins[self.rvars.index(v)], v)  
                self.metPuppi_Up_zg = collection(self.bins[self.rvars.index(v)], v)  
                self.metPuppi_Up_da = collection(self.bins[self.rvars.index(v)], v)         
                self.metPuppi_Down   = collection(self.bins[self.rvars.index(v)], v)
                self.metPuppi_Down_qcd   = collection(self.bins[self.rvars.index(v)], v)
                self.metPuppi_Down_gjets   = collection(self.bins[self.rvars.index(v)], v)
                self.metPuppi_Down_wg = collection(self.bins[self.rvars.index(v)], v)  
                self.metPuppi_Down_wj = collection(self.bins[self.rvars.index(v)], v)  
                self.metPuppi_Down_ttg = collection(self.bins[self.rvars.index(v)], v)  
                self.metPuppi_Down_zg = collection(self.bins[self.rvars.index(v)], v)  
                self.metPuppi_Down_da = collection(self.bins[self.rvars.index(v)], v)         
            if v == 'met_sig':
                self.met_sig   = collection(self.bins[self.rvars.index(v)], v)
                self.met_sig_dy   = collection(self.bins[self.rvars.index(v)], v)
                self.met_sig_da = collection(self.bins[self.rvars.index(v)], v)    
                self.met_sig_tt = collection(self.bins[self.rvars.index(v)], v)    
                self.met_sig_ewk = collection(self.bins[self.rvars.index(v)], v)    
                self.met_sig   = collection(self.bins[self.rvars.index(v)], v)
                self.met_sig_qcd   = collection(self.bins[self.rvars.index(v)], v)
                self.met_sig_gjets   = collection(self.bins[self.rvars.index(v)], v)
                self.met_sig_wg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_sig_wj = collection(self.bins[self.rvars.index(v)], v)  
                self.met_sig_ttg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_sig_zg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_sig_da = collection(self.bins[self.rvars.index(v)], v)         

            if v == 'met_sig_1jet':
                self.met_sig_1jet   = collection(self.bins[self.rvars.index(v)], v)
                self.met_sig_1jet_dy   = collection(self.bins[self.rvars.index(v)], v)
                self.met_sig_1jet_da = collection(self.bins[self.rvars.index(v)], v)    
                self.met_sig_1jet_tt = collection(self.bins[self.rvars.index(v)], v)    
                self.met_sig_1jet_ewk = collection(self.bins[self.rvars.index(v)], v)    
                self.met_sig_1jet   = collection(self.bins[self.rvars.index(v)], v)
                self.met_sig_1jet_qcd   = collection(self.bins[self.rvars.index(v)], v)
                self.met_sig_1jet_gjets   = collection(self.bins[self.rvars.index(v)], v)
                self.met_sig_1jet_wg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_sig_1jet_wj = collection(self.bins[self.rvars.index(v)], v)  
                self.met_sig_1jet_ttg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_sig_1jet_zg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_sig_1jet_da = collection(self.bins[self.rvars.index(v)], v)         
            if v == 'metPuppi_sig':
                self.metPuppi_sig   = collection(self.bins[self.rvars.index(v)], v)
                self.metPuppi_sig_dy   = collection(self.bins[self.rvars.index(v)], v)
                self.metPuppi_sig_da = collection(self.bins[self.rvars.index(v)], v)    
                self.metPuppi_sig_tt = collection(self.bins[self.rvars.index(v)], v)    
                self.metPuppi_sig_ewk = collection(self.bins[self.rvars.index(v)], v)    
                self.metPuppi_sig_qcd   = collection(self.bins[self.rvars.index(v)], v)
                self.metPuppi_sig_gjets   = collection(self.bins[self.rvars.index(v)], v)
                self.metPuppi_sig_wg = collection(self.bins[self.rvars.index(v)], v)  
                self.metPuppi_sig_wj = collection(self.bins[self.rvars.index(v)], v)  
                self.metPuppi_sig_ttg = collection(self.bins[self.rvars.index(v)], v)  
                self.metPuppi_sig_zg = collection(self.bins[self.rvars.index(v)], v)  
                self.metPuppi_sig_da = collection(self.bins[self.rvars.index(v)], v)         
            if v == 'met_x':
                self.met_x   = collection(self.bins[self.rvars.index(v)], v)
                self.met_x_dy   = collection(self.bins[self.rvars.index(v)], v)
                self.met_x_da = collection(self.bins[self.rvars.index(v)], v)    
                self.met_x_tt = collection(self.bins[self.rvars.index(v)], v)    
                self.met_x_ewk = collection(self.bins[self.rvars.index(v)], v)    
                self.met_x_Up   = collection(self.bins[self.rvars.index(v)], v)
                self.met_x_Up_dy   = collection(self.bins[self.rvars.index(v)], v)
                self.met_x_Up_da = collection(self.bins[self.rvars.index(v)], v)    
                self.met_x_Up_tt = collection(self.bins[self.rvars.index(v)], v)    
                self.met_x_Up_ewk = collection(self.bins[self.rvars.index(v)], v)    
                self.met_x_Down   = collection(self.bins[self.rvars.index(v)], v)          
                self.met_x_Down_dy   = collection(self.bins[self.rvars.index(v)], v)
                self.met_x_Down_da = collection(self.bins[self.rvars.index(v)], v)    
                self.met_x_Down_tt = collection(self.bins[self.rvars.index(v)], v)    
                self.met_x_Down_ewk = collection(self.bins[self.rvars.index(v)], v)    
                self.met_x_unclUp   = collection(self.bins[self.rvars.index(v)], v)
                self.met_x_unclUp_dy   = collection(self.bins[self.rvars.index(v)], v)
                self.met_x_unclUp_da = collection(self.bins[self.rvars.index(v)], v)    
                self.met_x_unclUp_tt = collection(self.bins[self.rvars.index(v)], v)    
                self.met_x_unclUp_ewk = collection(self.bins[self.rvars.index(v)], v)    
                self.met_x_unclDown   = collection(self.bins[self.rvars.index(v)], v)      
                self.met_x_unclDown_dy   = collection(self.bins[self.rvars.index(v)], v)
                self.met_x_unclDown_da = collection(self.bins[self.rvars.index(v)], v)    
                self.met_x_unclDown_tt = collection(self.bins[self.rvars.index(v)], v)    
                self.met_x_unclDown_ewk = collection(self.bins[self.rvars.index(v)], v)    
                self.met_x_qcd   = collection(self.bins[self.rvars.index(v)], v)
                self.met_x_gjets   = collection(self.bins[self.rvars.index(v)], v)
                self.met_x_wg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_x_wj = collection(self.bins[self.rvars.index(v)], v)  
                self.met_x_ttg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_x_zg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_x_da = collection(self.bins[self.rvars.index(v)], v)         
                self.met_x_Up   = collection(self.bins[self.rvars.index(v)], v)
                self.met_x_Up_qcd   = collection(self.bins[self.rvars.index(v)], v)
                self.met_x_Up_gjets   = collection(self.bins[self.rvars.index(v)], v)
                self.met_x_Up_wg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_x_Up_wj = collection(self.bins[self.rvars.index(v)], v)  
                self.met_x_Up_ttg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_x_Up_zg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_x_Up_da = collection(self.bins[self.rvars.index(v)], v)         
                self.met_x_Down   = collection(self.bins[self.rvars.index(v)], v)
                self.met_x_Down_qcd   = collection(self.bins[self.rvars.index(v)], v)
                self.met_x_Down_gjets   = collection(self.bins[self.rvars.index(v)], v)
                self.met_x_Down_wg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_x_Down_wj = collection(self.bins[self.rvars.index(v)], v)  
                self.met_x_Down_ttg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_x_Down_zg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_x_Down_da = collection(self.bins[self.rvars.index(v)], v)              
            if v == 'met_y':
                self.met_y   = collection(self.bins[self.rvars.index(v)], v)
                self.met_y_dy   = collection(self.bins[self.rvars.index(v)], v)
                self.met_y_da = collection(self.bins[self.rvars.index(v)], v)    
                self.met_y_tt = collection(self.bins[self.rvars.index(v)], v)    
                self.met_y_ewk = collection(self.bins[self.rvars.index(v)], v)    
                self.met_y_Up   = collection(self.bins[self.rvars.index(v)], v)
                self.met_y_Up_dy   = collection(self.bins[self.rvars.index(v)], v)
                self.met_y_Up_da = collection(self.bins[self.rvars.index(v)], v)    
                self.met_y_Up_tt = collection(self.bins[self.rvars.index(v)], v)    
                self.met_y_Up_ewk = collection(self.bins[self.rvars.index(v)], v)    
                self.met_y_Down   = collection(self.bins[self.rvars.index(v)], v)          
                self.met_y_Down_dy   = collection(self.bins[self.rvars.index(v)], v)
                self.met_y_Down_da = collection(self.bins[self.rvars.index(v)], v)    
                self.met_y_Down_tt = collection(self.bins[self.rvars.index(v)], v)    
                self.met_y_Down_ewk = collection(self.bins[self.rvars.index(v)], v)    
                self.met_y_unclUp   = collection(self.bins[self.rvars.index(v)], v)
                self.met_y_unclUp_dy   = collection(self.bins[self.rvars.index(v)], v)
                self.met_y_unclUp_da = collection(self.bins[self.rvars.index(v)], v)    
                self.met_y_unclUp_tt = collection(self.bins[self.rvars.index(v)], v)    
                self.met_y_unclUp_ewk = collection(self.bins[self.rvars.index(v)], v)    
                self.met_y_unclDown   = collection(self.bins[self.rvars.index(v)], v)      
                self.met_y_unclDown_dy   = collection(self.bins[self.rvars.index(v)], v)
                self.met_y_unclDown_da = collection(self.bins[self.rvars.index(v)], v)    
                self.met_y_unclDown_tt = collection(self.bins[self.rvars.index(v)], v)    
                self.met_y_unclDown_ewk = collection(self.bins[self.rvars.index(v)], v)    
                self.met_y_qcd   = collection(self.bins[self.rvars.index(v)], v)
                self.met_y_gjets   = collection(self.bins[self.rvars.index(v)], v)
                self.met_y_wg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_y_wj = collection(self.bins[self.rvars.index(v)], v)  
                self.met_y_ttg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_y_zg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_y_da = collection(self.bins[self.rvars.index(v)], v)         
                self.met_y_Up   = collection(self.bins[self.rvars.index(v)], v)
                self.met_y_Up_qcd   = collection(self.bins[self.rvars.index(v)], v)
                self.met_y_Up_gjets   = collection(self.bins[self.rvars.index(v)], v)
                self.met_y_Up_wg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_y_Up_wj = collection(self.bins[self.rvars.index(v)], v)  
                self.met_y_Up_ttg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_y_Up_zg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_y_Up_da = collection(self.bins[self.rvars.index(v)], v)         
                self.met_y_Down   = collection(self.bins[self.rvars.index(v)], v)
                self.met_y_Down_qcd   = collection(self.bins[self.rvars.index(v)], v)
                self.met_y_Down_gjets   = collection(self.bins[self.rvars.index(v)], v)
                self.met_y_Down_wg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_y_Down_wj = collection(self.bins[self.rvars.index(v)], v)  
                self.met_y_Down_ttg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_y_Down_zg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_y_Down_da = collection(self.bins[self.rvars.index(v)], v)              
            if v == 'met_pt':
                self.met_pt   = collection(self.bins[self.rvars.index(v)], v)
                self.met_pt_dy   = collection(self.bins[self.rvars.index(v)], v)
                self.met_pt_da = collection(self.bins[self.rvars.index(v)], v)    
                self.met_pt_tt = collection(self.bins[self.rvars.index(v)], v)    
                self.met_pt_ewk = collection(self.bins[self.rvars.index(v)], v)    
                self.met_Up   = collection(self.bins[self.rvars.index(v)], v)
                self.met_Up_dy   = collection(self.bins[self.rvars.index(v)], v)
                self.met_Up_da = collection(self.bins[self.rvars.index(v)], v)    
                self.met_Up_tt = collection(self.bins[self.rvars.index(v)], v)    
                self.met_Up_ewk = collection(self.bins[self.rvars.index(v)], v)    
                self.met_Down   = collection(self.bins[self.rvars.index(v)], v)          
                self.met_Down_dy   = collection(self.bins[self.rvars.index(v)], v)
                self.met_Down_da = collection(self.bins[self.rvars.index(v)], v)    
                self.met_Down_tt = collection(self.bins[self.rvars.index(v)], v)    
                self.met_Down_ewk = collection(self.bins[self.rvars.index(v)], v)    
                self.met_unclUp   = collection(self.bins[self.rvars.index(v)], v)
                self.met_unclUp_dy   = collection(self.bins[self.rvars.index(v)], v)
                self.met_unclUp_da = collection(self.bins[self.rvars.index(v)], v)    
                self.met_unclUp_tt = collection(self.bins[self.rvars.index(v)], v)    
                self.met_unclUp_ewk = collection(self.bins[self.rvars.index(v)], v)    
                self.met_unclDown   = collection(self.bins[self.rvars.index(v)], v)      
                self.met_unclDown_dy   = collection(self.bins[self.rvars.index(v)], v)
                self.met_unclDown_da = collection(self.bins[self.rvars.index(v)], v)    
                self.met_unclDown_tt = collection(self.bins[self.rvars.index(v)], v)    
                self.met_unclDown_ewk = collection(self.bins[self.rvars.index(v)], v)    
                self.met_pt_qcd   = collection(self.bins[self.rvars.index(v)], v)
                self.met_pt_gjets   = collection(self.bins[self.rvars.index(v)], v)
                self.met_pt_wg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_pt_wj = collection(self.bins[self.rvars.index(v)], v)  
                self.met_pt_ttg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_pt_zg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_pt_da = collection(self.bins[self.rvars.index(v)], v)         
                self.met_Up   = collection(self.bins[self.rvars.index(v)], v)
                self.met_Up_qcd   = collection(self.bins[self.rvars.index(v)], v)
                self.met_Up_gjets   = collection(self.bins[self.rvars.index(v)], v)
                self.met_Up_wg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_Up_wj = collection(self.bins[self.rvars.index(v)], v)  
                self.met_Up_ttg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_Up_zg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_Up_da = collection(self.bins[self.rvars.index(v)], v)         
                self.met_Down   = collection(self.bins[self.rvars.index(v)], v)
                self.met_Down_qcd   = collection(self.bins[self.rvars.index(v)], v)
                self.met_Down_gjets   = collection(self.bins[self.rvars.index(v)], v)
                self.met_Down_wg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_Down_wj = collection(self.bins[self.rvars.index(v)], v)  
                self.met_Down_ttg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_Down_zg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_Down_da = collection(self.bins[self.rvars.index(v)], v)               
            if v == 'zll_pt':
                self.zll_pt   = collection(self.bins[self.rvars.index(v)], v)
                self.zll_pt_dy   = collection(self.bins[self.rvars.index(v)], v)
                self.zll_pt_da = collection(self.bins[self.rvars.index(v)], v)    
                self.zll_pt_tt = collection(self.bins[self.rvars.index(v)], v)    
                self.zll_pt_ewk = collection(self.bins[self.rvars.index(v)], v)    
            if v == 'zll_phi':
                self.zll_phi   = collection(self.bins[self.rvars.index(v)], v)
                self.zll_phi_dy   = collection(self.bins[self.rvars.index(v)], v)
                self.zll_phi_da = collection(self.bins[self.rvars.index(v)], v)    
                self.zll_phi_tt = collection(self.bins[self.rvars.index(v)], v)    
                self.zll_phi_ewk = collection(self.bins[self.rvars.index(v)], v)    
            if v == 'met_phi':
                self.met_phi   = collection(self.bins[self.rvars.index(v)], v)
                self.met_phi_dy   = collection(self.bins[self.rvars.index(v)], v)
                self.met_phi_da = collection(self.bins[self.rvars.index(v)], v)    
                self.met_phi_tt = collection(self.bins[self.rvars.index(v)], v)    
                self.met_phi_ewk = collection(self.bins[self.rvars.index(v)], v)    
            if v == 'lep_pt':
                self.lep_pt   = collection(self.bins[self.rvars.index(v)], v)
                self.lep_pt_dy   = collection(self.bins[self.rvars.index(v)], v)
                self.lep_pt_da = collection(self.bins[self.rvars.index(v)], v)    
                self.lep_pt_tt = collection(self.bins[self.rvars.index(v)], v)    
                self.lep_pt_ewk = collection(self.bins[self.rvars.index(v)], v)    
            if v == 'chi2':
                self.chi2   = collection(self.bins[self.rvars.index(v)], v)
                self.chi2_dy   = collection(self.bins[self.rvars.index(v)], v)
                self.chi2_da = collection(self.bins[self.rvars.index(v)], v)    
                self.chi2_tt = collection(self.bins[self.rvars.index(v)], v)    
                self.chi2_ewk = collection(self.bins[self.rvars.index(v)], v)    
            if v == 'chi2_1jet':
                self.chi2_1jet   = collection(self.bins[self.rvars.index(v)], v)
                self.chi2_1jet_dy   = collection(self.bins[self.rvars.index(v)], v)
                self.chi2_1jet_da = collection(self.bins[self.rvars.index(v)], v)    
                self.chi2_1jet_tt = collection(self.bins[self.rvars.index(v)], v)    
                self.chi2_1jet_ewk = collection(self.bins[self.rvars.index(v)], v)    
            if v == 'zll_eta':
                self.zll_eta   = collection(self.bins[self.rvars.index(v)], v)
                self.zll_eta_dy   = collection(self.bins[self.rvars.index(v)], v)
                self.zll_eta_da = collection(self.bins[self.rvars.index(v)], v)    
                self.zll_eta_tt = collection(self.bins[self.rvars.index(v)], v)    
                self.zll_eta_ewk = collection(self.bins[self.rvars.index(v)], v)    
            if v == 'zll_mass':
                self.zll_mass   = collection(self.bins[self.rvars.index(v)], v)
                self.zll_mass_dy   = collection(self.bins[self.rvars.index(v)], v)
                self.zll_mass_da = collection(self.bins[self.rvars.index(v)], v)    
                self.zll_mass_tt = collection(self.bins[self.rvars.index(v)], v)    
                self.zll_mass_ewk = collection(self.bins[self.rvars.index(v)], v)    
            if v == 'nVert':
                self.nVert   = collection(self.bins[self.rvars.index(v)], v)
                self.nVert_dy   = collection(self.bins[self.rvars.index(v)], v)
                self.nVert_da = collection(self.bins[self.rvars.index(v)], v)    
                self.nVert_tt = collection(self.bins[self.rvars.index(v)], v)    
                self.nVert_ewk = collection(self.bins[self.rvars.index(v)], v)    
                self.nVert_wg = collection(self.bins[self.rvars.index(v)], v) 
                self.nVert_zg = collection(self.bins[self.rvars.index(v)], v) 
                self.nVert_wj = collection(self.bins[self.rvars.index(v)], v) 
                self.nVert_ttg = collection(self.bins[self.rvars.index(v)], v) 
                self.nVert_qcd = collection(self.bins[self.rvars.index(v)], v) 
                self.nVert_gjets = collection(self.bins[self.rvars.index(v)], v) 
            if v == 'metPuppi_uPerp':
                self.metPuppi_uPerp   = collection(self.bins[self.rvars.index(v)], v)
                self.metPuppi_uPerp_dy   = collection(self.bins[self.rvars.index(v)], v)
                self.metPuppi_uPerp_da = collection(self.bins[self.rvars.index(v)], v)    
                self.metPuppi_uPerp_tt = collection(self.bins[self.rvars.index(v)], v)    
                self.metPuppi_uPerp_ewk = collection(self.bins[self.rvars.index(v)], v)    
                self.metPuppi_uPerp_Up   = collection(self.bins[self.rvars.index(v)], v)
                self.metPuppi_uPerp_Up_dy   = collection(self.bins[self.rvars.index(v)], v)
                self.metPuppi_uPerp_Up_da = collection(self.bins[self.rvars.index(v)], v)    
                self.metPuppi_uPerp_Up_tt = collection(self.bins[self.rvars.index(v)], v)    
                self.metPuppi_uPerp_Up_ewk = collection(self.bins[self.rvars.index(v)], v)    
                self.metPuppi_uPerp_Down   = collection(self.bins[self.rvars.index(v)], v)             
                self.metPuppi_uPerp_Down_dy   = collection(self.bins[self.rvars.index(v)], v)
                self.metPuppi_uPerp_Down_da = collection(self.bins[self.rvars.index(v)], v)    
                self.metPuppi_uPerp_Down_tt = collection(self.bins[self.rvars.index(v)], v)    
                self.metPuppi_uPerp_Down_ewk = collection(self.bins[self.rvars.index(v)], v)    
                self.metPuppi_uPerp_unclUp   = collection(self.bins[self.rvars.index(v)], v)
                self.metPuppi_uPerp_unclUp_dy   = collection(self.bins[self.rvars.index(v)], v)
                self.metPuppi_uPerp_unclUp_da = collection(self.bins[self.rvars.index(v)], v)    
                self.metPuppi_uPerp_unclUp_tt = collection(self.bins[self.rvars.index(v)], v)    
                self.metPuppi_uPerp_unclUp_ewk = collection(self.bins[self.rvars.index(v)], v)    
                self.metPuppi_uPerp_unclDown   = collection(self.bins[self.rvars.index(v)], v)      
                self.metPuppi_uPerp_unclDown_dy   = collection(self.bins[self.rvars.index(v)], v)
                self.metPuppi_uPerp_unclDown_da = collection(self.bins[self.rvars.index(v)], v)    
                self.metPuppi_uPerp_unclDown_tt = collection(self.bins[self.rvars.index(v)], v)    
                self.metPuppi_uPerp_unclDown_ewk = collection(self.bins[self.rvars.index(v)], v)    
            if v == 'metPuppi_uPara':
                self.metPuppi_uPara     = collection(self.bins[self.rvars.index(v)], v)
                self.metPuppi_uPara_dy   = collection(self.bins[self.rvars.index(v)], v)
                self.metPuppi_uPara_da = collection(self.bins[self.rvars.index(v)], v)    
                self.metPuppi_uPara_tt = collection(self.bins[self.rvars.index(v)], v)    
                self.metPuppi_uPara_ewk = collection(self.bins[self.rvars.index(v)], v)         
                self.metPuppi_uPara_Up     = collection(self.bins[self.rvars.index(v)], v)
                self.metPuppi_uPara_Up_dy   = collection(self.bins[self.rvars.index(v)], v)
                self.metPuppi_uPara_Up_da = collection(self.bins[self.rvars.index(v)], v)    
                self.metPuppi_uPara_Up_tt = collection(self.bins[self.rvars.index(v)], v)    
                self.metPuppi_uPara_Up_ewk = collection(self.bins[self.rvars.index(v)], v)       
                self.metPuppi_uPara_Down     = collection(self.bins[self.rvars.index(v)], v)        
                self.metPuppi_uPara_Down_dy   = collection(self.bins[self.rvars.index(v)], v)
                self.metPuppi_uPara_Down_da = collection(self.bins[self.rvars.index(v)], v)    
                self.metPuppi_uPara_Down_tt = collection(self.bins[self.rvars.index(v)], v)    
                self.metPuppi_uPara_Down_ewk = collection(self.bins[self.rvars.index(v)], v)       
                self.metPuppi_uPara_unclUp     = collection(self.bins[self.rvars.index(v)], v)
                self.metPuppi_uPara_unclUp_dy   = collection(self.bins[self.rvars.index(v)], v)
                self.metPuppi_uPara_unclUp_da = collection(self.bins[self.rvars.index(v)], v)    
                self.metPuppi_uPara_unclUp_tt = collection(self.bins[self.rvars.index(v)], v)    
                self.metPuppi_uPara_unclUp_ewk = collection(self.bins[self.rvars.index(v)], v)       
                self.metPuppi_uPara_unclDown     = collection(self.bins[self.rvars.index(v)], v)       
                self.metPuppi_uPara_unclDown_dy   = collection(self.bins[self.rvars.index(v)], v)
                self.metPuppi_uPara_unclDown_da = collection(self.bins[self.rvars.index(v)], v)    
                self.metPuppi_uPara_unclDown_tt = collection(self.bins[self.rvars.index(v)], v)    
                self.metPuppi_uPara_unclDown_ewk = collection(self.bins[self.rvars.index(v)], v)       
            if v == 'met_uPerp':
                self.met_uPerp   = collection(self.bins[self.rvars.index(v)], v)
                self.met_uPerp_dy   = collection(self.bins[self.rvars.index(v)], v)
                self.met_uPerp_da = collection(self.bins[self.rvars.index(v)], v)    
                self.met_uPerp_tt = collection(self.bins[self.rvars.index(v)], v)    
                self.met_uPerp_ewk = collection(self.bins[self.rvars.index(v)], v)    
                self.met_uPerp_Up   = collection(self.bins[self.rvars.index(v)], v)
                self.met_uPerp_Up_dy   = collection(self.bins[self.rvars.index(v)], v)
                self.met_uPerp_Up_da = collection(self.bins[self.rvars.index(v)], v)    
                self.met_uPerp_Up_tt = collection(self.bins[self.rvars.index(v)], v)    
                self.met_uPerp_Up_ewk = collection(self.bins[self.rvars.index(v)], v)    
                self.met_uPerp_Down   = collection(self.bins[self.rvars.index(v)], v)                
                self.met_uPerp_Down_dy   = collection(self.bins[self.rvars.index(v)], v)
                self.met_uPerp_Down_da = collection(self.bins[self.rvars.index(v)], v)    
                self.met_uPerp_Down_tt = collection(self.bins[self.rvars.index(v)], v)    
                self.met_uPerp_Down_ewk = collection(self.bins[self.rvars.index(v)], v)    
                self.met_uPerp_unclUp   = collection(self.bins[self.rvars.index(v)], v)
                self.met_uPerp_unclUp_dy   = collection(self.bins[self.rvars.index(v)], v)
                self.met_uPerp_unclUp_da = collection(self.bins[self.rvars.index(v)], v)    
                self.met_uPerp_unclUp_tt = collection(self.bins[self.rvars.index(v)], v)    
                self.met_uPerp_unclUp_ewk = collection(self.bins[self.rvars.index(v)], v)    
                self.met_uPerp_unclDown   = collection(self.bins[self.rvars.index(v)], v)      
                self.met_uPerp_unclDown_dy   = collection(self.bins[self.rvars.index(v)], v)
                self.met_uPerp_unclDown_da = collection(self.bins[self.rvars.index(v)], v)    
                self.met_uPerp_unclDown_tt = collection(self.bins[self.rvars.index(v)], v)    
                self.met_uPerp_unclDown_ewk = collection(self.bins[self.rvars.index(v)], v)    
            if v == 'met_uPara':
                self.met_uPara     = collection(self.bins[self.rvars.index(v)], v)
                self.met_uPara_dy   = collection(self.bins[self.rvars.index(v)], v)
                self.met_uPara_da = collection(self.bins[self.rvars.index(v)], v)    
                self.met_uPara_tt = collection(self.bins[self.rvars.index(v)], v)    
                self.met_uPara_ewk = collection(self.bins[self.rvars.index(v)], v)         
                self.met_uPara_Up     = collection(self.bins[self.rvars.index(v)], v)
                self.met_uPara_Up_dy   = collection(self.bins[self.rvars.index(v)], v)
                self.met_uPara_Up_da = collection(self.bins[self.rvars.index(v)], v)    
                self.met_uPara_Up_tt = collection(self.bins[self.rvars.index(v)], v)    
                self.met_uPara_Up_ewk = collection(self.bins[self.rvars.index(v)], v)       
                self.met_uPara_Down     = collection(self.bins[self.rvars.index(v)], v)        
                self.met_uPara_Down_dy   = collection(self.bins[self.rvars.index(v)], v)
                self.met_uPara_Down_da = collection(self.bins[self.rvars.index(v)], v)    
                self.met_uPara_Down_tt = collection(self.bins[self.rvars.index(v)], v)    
                self.met_uPara_Down_ewk = collection(self.bins[self.rvars.index(v)], v)       
                self.met_uPara_unclUp     = collection(self.bins[self.rvars.index(v)], v)
                self.met_uPara_unclUp_dy   = collection(self.bins[self.rvars.index(v)], v)
                self.met_uPara_unclUp_da = collection(self.bins[self.rvars.index(v)], v)    
                self.met_uPara_unclUp_tt = collection(self.bins[self.rvars.index(v)], v)    
                self.met_uPara_unclUp_ewk = collection(self.bins[self.rvars.index(v)], v)       
                self.met_uPara_unclDown     = collection(self.bins[self.rvars.index(v)], v)       
                self.met_uPara_unclDown_dy   = collection(self.bins[self.rvars.index(v)], v)
                self.met_uPara_unclDown_da = collection(self.bins[self.rvars.index(v)], v)    
                self.met_uPara_unclDown_tt = collection(self.bins[self.rvars.index(v)], v)    
                self.met_uPara_unclDown_ewk = collection(self.bins[self.rvars.index(v)], v)       
                self.met_uPara   = collection(self.bins[self.rvars.index(v)], v)
                self.met_uPara_qcd   = collection(self.bins[self.rvars.index(v)], v)
                self.met_uPara_gjets   = collection(self.bins[self.rvars.index(v)], v)
                self.met_uPara_ttg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_uPara_zg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_uPara_wg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_uPara_wj = collection(self.bins[self.rvars.index(v)], v)  
                self.met_uPara_da = collection(self.bins[self.rvars.index(v)], v)       
                self.met_uPara_Up   = collection(self.bins[self.rvars.index(v)], v)
                self.met_uPara_Up_qcd   = collection(self.bins[self.rvars.index(v)], v)
                self.met_uPara_Up_gjets   = collection(self.bins[self.rvars.index(v)], v)
                self.met_uPara_Up_ttg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_uPara_Up_zg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_uPara_Up_wg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_uPara_Up_wj = collection(self.bins[self.rvars.index(v)], v)  
                self.met_uPara_Up_da = collection(self.bins[self.rvars.index(v)], v)      
                self.met_uPara_Down   = collection(self.bins[self.rvars.index(v)], v)
                self.met_uPara_Down_qcd   = collection(self.bins[self.rvars.index(v)], v)
                self.met_uPara_Down_gjets   = collection(self.bins[self.rvars.index(v)], v)
                self.met_uPara_Down_ttg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_uPara_Down_zg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_uPara_Down_wg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_uPara_Down_wj = collection(self.bins[self.rvars.index(v)], v)  
                self.met_uPara_Down_da = collection(self.bins[self.rvars.index(v)], v)      
                self.met_uPara_unclUp   = collection(self.bins[self.rvars.index(v)], v)
                self.met_uPara_unclUp_qcd   = collection(self.bins[self.rvars.index(v)], v)
                self.met_uPara_unclUp_gjets   = collection(self.bins[self.rvars.index(v)], v)
                self.met_uPara_unclUp_ttg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_uPara_unclUp_zg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_uPara_unclUp_wg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_uPara_unclUp_wj = collection(self.bins[self.rvars.index(v)], v)  
                self.met_uPara_unclUp_da = collection(self.bins[self.rvars.index(v)], v)      
                self.met_uPara_unclDown   = collection(self.bins[self.rvars.index(v)], v)
                self.met_uPara_unclDown_qcd   = collection(self.bins[self.rvars.index(v)], v)
                self.met_uPara_unclDown_gjets   = collection(self.bins[self.rvars.index(v)], v)
                self.met_uPara_unclDown_ttg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_uPara_unclDown_zg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_uPara_unclDown_wg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_uPara_unclDown_wj = collection(self.bins[self.rvars.index(v)], v)  
                self.met_uPara_unclDown_da = collection(self.bins[self.rvars.index(v)], v)      
            
            if v == 'met_uPerp':
                self.met_uPerp   = collection(self.bins[self.rvars.index(v)], v)
                self.met_uPerp_gjets   = collection(self.bins[self.rvars.index(v)], v)
                self.met_uPerp_wj = collection(self.bins[self.rvars.index(v)], v)  
                self.met_uPerp_wg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_uPerp_zg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_uPerp_ttg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_uPerp_da = collection(self.bins[self.rvars.index(v)], v)       
                self.met_uPerp_qcd = collection(self.bins[self.rvars.index(v)], v)       
                self.met_uPerp_Up   = collection(self.bins[self.rvars.index(v)], v)
                self.met_uPerp_Up_gjets   = collection(self.bins[self.rvars.index(v)], v)
                self.met_uPerp_Up_wj = collection(self.bins[self.rvars.index(v)], v)  
                self.met_uPerp_Up_wg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_uPerp_Up_zg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_uPerp_Up_ttg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_uPerp_Up_da = collection(self.bins[self.rvars.index(v)], v)       
                self.met_uPerp_Up_qcd = collection(self.bins[self.rvars.index(v)], v)       
                self.met_uPerp_Down   = collection(self.bins[self.rvars.index(v)], v)
                self.met_uPerp_Down_gjets   = collection(self.bins[self.rvars.index(v)], v)
                self.met_uPerp_Down_wj = collection(self.bins[self.rvars.index(v)], v)  
                self.met_uPerp_Down_wg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_uPerp_Down_zg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_uPerp_Down_ttg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_uPerp_Down_da = collection(self.bins[self.rvars.index(v)], v)       
                self.met_uPerp_Down_qcd = collection(self.bins[self.rvars.index(v)], v)       
                self.met_uPerp_unclUp   = collection(self.bins[self.rvars.index(v)], v)
                self.met_uPerp_unclUp_gjets   = collection(self.bins[self.rvars.index(v)], v)
                self.met_uPerp_unclUp_wj = collection(self.bins[self.rvars.index(v)], v)  
                self.met_uPerp_unclUp_wg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_uPerp_unclUp_zg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_uPerp_unclUp_ttg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_uPerp_unclUp_da = collection(self.bins[self.rvars.index(v)], v)       
                self.met_uPerp_unclUp_qcd = collection(self.bins[self.rvars.index(v)], v)       
                self.met_uPerp_unclDown   = collection(self.bins[self.rvars.index(v)], v)
                self.met_uPerp_unclDown_gjets   = collection(self.bins[self.rvars.index(v)], v)
                self.met_uPerp_unclDown_wj = collection(self.bins[self.rvars.index(v)], v)  
                self.met_uPerp_unclDown_wg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_uPerp_unclDown_zg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_uPerp_unclDown_ttg = collection(self.bins[self.rvars.index(v)], v)  
                self.met_uPerp_unclDown_da = collection(self.bins[self.rvars.index(v)], v)       
                self.met_uPerp_unclDown_qcd = collection(self.bins[self.rvars.index(v)], v)                    
            
            if v == 'metPuppi_uPara':                                                                               
                self.metPuppi_uPara   = collection(self.bins[self.rvars.index(v)], v)                               
                self.metPuppi_uPara_qcd   = collection(self.bins[self.rvars.index(v)], v)                           
                self.metPuppi_uPara_gjets   = collection(self.bins[self.rvars.index(v)], v)                         
                self.metPuppi_uPara_ttg = collection(self.bins[self.rvars.index(v)], v)                             
                self.metPuppi_uPara_zg = collection(self.bins[self.rvars.index(v)], v)                              
                self.metPuppi_uPara_wg = collection(self.bins[self.rvars.index(v)], v)                              
                self.metPuppi_uPara_wj = collection(self.bins[self.rvars.index(v)], v)                              
                self.metPuppi_uPara_da = collection(self.bins[self.rvars.index(v)], v)                              
                self.metPuppi_uPara_Up   = collection(self.bins[self.rvars.index(v)], v)                            
                self.metPuppi_uPara_Up_qcd   = collection(self.bins[self.rvars.index(v)], v)                        
                self.metPuppi_uPara_Up_gjets   = collection(self.bins[self.rvars.index(v)], v)                      
                self.metPuppi_uPara_Up_ttg = collection(self.bins[self.rvars.index(v)], v)                          
                self.metPuppi_uPara_Up_zg = collection(self.bins[self.rvars.index(v)], v)                           
                self.metPuppi_uPara_Up_wg = collection(self.bins[self.rvars.index(v)], v)                           
                self.metPuppi_uPara_Up_wj = collection(self.bins[self.rvars.index(v)], v)                           
                self.metPuppi_uPara_Up_da = collection(self.bins[self.rvars.index(v)], v)                           
                self.metPuppi_uPara_Down   = collection(self.bins[self.rvars.index(v)], v)                          
                self.metPuppi_uPara_Down_qcd   = collection(self.bins[self.rvars.index(v)], v)                      
                self.metPuppi_uPara_Down_gjets   = collection(self.bins[self.rvars.index(v)], v)                    
                self.metPuppi_uPara_Down_ttg = collection(self.bins[self.rvars.index(v)], v)                        
                self.metPuppi_uPara_Down_zg = collection(self.bins[self.rvars.index(v)], v)                         
                self.metPuppi_uPara_Down_wg = collection(self.bins[self.rvars.index(v)], v)                         
                self.metPuppi_uPara_Down_wj = collection(self.bins[self.rvars.index(v)], v)                         
                self.metPuppi_uPara_Down_da = collection(self.bins[self.rvars.index(v)], v)                         
                self.metPuppi_uPara_unclUp   = collection(self.bins[self.rvars.index(v)], v)                        
                self.metPuppi_uPara_unclUp_qcd   = collection(self.bins[self.rvars.index(v)], v)                    
                self.metPuppi_uPara_unclUp_gjets   = collection(self.bins[self.rvars.index(v)], v)                  
                self.metPuppi_uPara_unclUp_ttg = collection(self.bins[self.rvars.index(v)], v)                      
                self.metPuppi_uPara_unclUp_zg = collection(self.bins[self.rvars.index(v)], v)                       
                self.metPuppi_uPara_unclUp_wg = collection(self.bins[self.rvars.index(v)], v)                       
                self.metPuppi_uPara_unclUp_wj = collection(self.bins[self.rvars.index(v)], v)                       
                self.metPuppi_uPara_unclUp_da = collection(self.bins[self.rvars.index(v)], v)                       
                self.metPuppi_uPara_unclDown   = collection(self.bins[self.rvars.index(v)], v)                      
                self.metPuppi_uPara_unclDown_qcd   = collection(self.bins[self.rvars.index(v)], v)                  
                self.metPuppi_uPara_unclDown_gjets   = collection(self.bins[self.rvars.index(v)], v)                
                self.metPuppi_uPara_unclDown_ttg = collection(self.bins[self.rvars.index(v)], v)                    
                self.metPuppi_uPara_unclDown_zg = collection(self.bins[self.rvars.index(v)], v)                     
                self.metPuppi_uPara_unclDown_wg = collection(self.bins[self.rvars.index(v)], v)                     
                self.metPuppi_uPara_unclDown_wj = collection(self.bins[self.rvars.index(v)], v)                     
                self.metPuppi_uPara_unclDown_da = collection(self.bins[self.rvars.index(v)], v)                     
            if v == 'metPuppi_uPerp':                                                                               
                self.metPuppi_uPerp   = collection(self.bins[self.rvars.index(v)], v)                               
                self.metPuppi_uPerp_gjets   = collection(self.bins[self.rvars.index(v)], v)                         
                self.metPuppi_uPerp_wj = collection(self.bins[self.rvars.index(v)], v)                              
                self.metPuppi_uPerp_wg = collection(self.bins[self.rvars.index(v)], v)                              
                self.metPuppi_uPerp_zg = collection(self.bins[self.rvars.index(v)], v)                              
                self.metPuppi_uPerp_ttg = collection(self.bins[self.rvars.index(v)], v)                             
                self.metPuppi_uPerp_da = collection(self.bins[self.rvars.index(v)], v)                              
                self.metPuppi_uPerp_qcd = collection(self.bins[self.rvars.index(v)], v)                             
                self.metPuppi_uPerp_Up   = collection(self.bins[self.rvars.index(v)], v)                            
                self.metPuppi_uPerp_Up_gjets   = collection(self.bins[self.rvars.index(v)], v)                      
                self.metPuppi_uPerp_Up_wj = collection(self.bins[self.rvars.index(v)], v)                           
                self.metPuppi_uPerp_Up_wg = collection(self.bins[self.rvars.index(v)], v)                           
                self.metPuppi_uPerp_Up_zg = collection(self.bins[self.rvars.index(v)], v)                           
                self.metPuppi_uPerp_Up_ttg = collection(self.bins[self.rvars.index(v)], v)                          
                self.metPuppi_uPerp_Up_da = collection(self.bins[self.rvars.index(v)], v)                           
                self.metPuppi_uPerp_Up_qcd = collection(self.bins[self.rvars.index(v)], v)                          
                self.metPuppi_uPerp_Down   = collection(self.bins[self.rvars.index(v)], v)                          
                self.metPuppi_uPerp_Down_gjets   = collection(self.bins[self.rvars.index(v)], v)                    
                self.metPuppi_uPerp_Down_wj = collection(self.bins[self.rvars.index(v)], v)  
                self.metPuppi_uPerp_Down_wg = collection(self.bins[self.rvars.index(v)], v)  
                self.metPuppi_uPerp_Down_zg = collection(self.bins[self.rvars.index(v)], v)  
                self.metPuppi_uPerp_Down_ttg = collection(self.bins[self.rvars.index(v)], v)  
                self.metPuppi_uPerp_Down_da = collection(self.bins[self.rvars.index(v)], v)       
                self.metPuppi_uPerp_Down_qcd = collection(self.bins[self.rvars.index(v)], v)       
                self.metPuppi_uPerp_unclUp   = collection(self.bins[self.rvars.index(v)], v)
                self.metPuppi_uPerp_unclUp_gjets   = collection(self.bins[self.rvars.index(v)], v)
                self.metPuppi_uPerp_unclUp_wj = collection(self.bins[self.rvars.index(v)], v)  
                self.metPuppi_uPerp_unclUp_wg = collection(self.bins[self.rvars.index(v)], v)  
                self.metPuppi_uPerp_unclUp_zg = collection(self.bins[self.rvars.index(v)], v)  
                self.metPuppi_uPerp_unclUp_ttg = collection(self.bins[self.rvars.index(v)], v)  
                self.metPuppi_uPerp_unclUp_da = collection(self.bins[self.rvars.index(v)], v)       
                self.metPuppi_uPerp_unclUp_qcd = collection(self.bins[self.rvars.index(v)], v)       
                self.metPuppi_uPerp_unclDown   = collection(self.bins[self.rvars.index(v)], v)
                self.metPuppi_uPerp_unclDown_gjets   = collection(self.bins[self.rvars.index(v)], v)
                self.metPuppi_uPerp_unclDown_wj = collection(self.bins[self.rvars.index(v)], v)  
                self.metPuppi_uPerp_unclDown_wg = collection(self.bins[self.rvars.index(v)], v)  
                self.metPuppi_uPerp_unclDown_zg = collection(self.bins[self.rvars.index(v)], v)  
                self.metPuppi_uPerp_unclDown_ttg = collection(self.bins[self.rvars.index(v)], v)  
                self.metPuppi_uPerp_unclDown_da = collection(self.bins[self.rvars.index(v)], v)       
                self.metPuppi_uPerp_unclDown_qcd = collection(self.bins[self.rvars.index(v)], v)                   
            if v == 'gamma_pt':
                self.gamma_pt   = collection(self.bins[self.rvars.index(v)], v)
                self.gamma_pt_qcd   = collection(self.bins[self.rvars.index(v)], v)
                self.gamma_pt_gjets   = collection(self.bins[self.rvars.index(v)], v)
                self.gamma_pt_wg = collection(self.bins[self.rvars.index(v)], v)  
                self.gamma_pt_zg = collection(self.bins[self.rvars.index(v)], v)  
                self.gamma_pt_wj = collection(self.bins[self.rvars.index(v)], v)  
                self.gamma_pt_ttg = collection(self.bins[self.rvars.index(v)], v)  
                self.gamma_pt_da = collection(self.bins[self.rvars.index(v)], v)      

